<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>ch.unifr.diva.dip</groupId>
		<artifactId>dip-pom-osgi</artifactId>
		<version>1.0.0-SNAPSHOT</version>
		<relativePath>../../pom-osgi/pom.xml</relativePath>
	</parent>
	<artifactId>dip-pom-osgi-repackage</artifactId>
	<name>DIVA DIP OSGi Repackage POM</name>
	<description>
		The DIVA DIP OSGi Package POM is a direct parent POM to create OSGi
		bundles out of third party dependencies - that unfortunately aren't
		packaged as OSGi bundles (yet) - by simply repackaging them into a
		new jar.
	</description>
	<packaging>pom</packaging>

	<properties>
		<!-- correct paths of bundle directories -->
		<app.core.bundledir>../../app/target/bundles-core</app.core.bundledir>
		<app.plugin.bundledir>../../app/target/bundles</app.plugin.bundledir>

		<!-- needs to be set to false in child POMs. This is set to true in here
		s.t. this POM doesn't end up in the bundle directory itself. -->
		<osgi.repackage.skip>true</osgi.repackage.skip>
		<osgi.repackage.filename>${project.artifactId}-${project.version}.jar</osgi.repackage.filename>
		<!-- the symbolic bundle name might have to be adapted to just use the
		groupId if the artifactId is equal to the last section of groupId -->
		<osgi.bundle.symbolicName>${project.groupId}.${project.artifactId}</osgi.bundle.symbolicName>
		<osgi.bundle.version>${project.version}</osgi.bundle.version>
		<osgi.bundle.exportPackage>*</osgi.bundle.exportPackage>
		<osgi.bundle.importPackage>*</osgi.bundle.importPackage>
		<osgi.bundle.embedDependency>*;scope=compile|runtime</osgi.bundle.embedDependency>
		<osgi.bundle.embedDirectory>target/dependency</osgi.bundle.embedDirectory>
		<osgi.bundle.embedStripGroup>true</osgi.bundle.embedStripGroup>
		<osgi.bundle.embedTransitive>true</osgi.bundle.embedTransitive>
		<osgi.bundle.excludeTransitive>true</osgi.bundle.excludeTransitive>

		<!-- disable reporting/maven site plugin -->
		<reporting.maven.site.skip>true</reporting.maven.site.skip>
		<dependency.locations.enabled>false</dependency.locations.enabled>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<unpackBundle>true</unpackBundle>
					<instructions>
						<Bundle-SymbolicName>${osgi.bundle.symbolicName}</Bundle-SymbolicName>
						<Bundle-Version>${osgi.bundle.version}</Bundle-Version>
						<Export-Package>${osgi.bundle.exportPackage}</Export-Package>
						<Import-Package>${osgi.bundle.importPackage}</Import-Package>
						<Embed-Dependency>${osgi.bundle.embedDependency}</Embed-Dependency>
						<Embed-Directory>${osgi.bundle.embedDirectory}</Embed-Directory>
						<Embed-StripGroup>${osgi.bundle.embedStripGroup}</Embed-StripGroup>
						<Embed-Transitive>${osgi.bundle.embedTransitive}</Embed-Transitive>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-bundles</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<artifactItems>
						<artifactItem>
							<groupId>${project.groupId}</groupId>
							<artifactId>${project.artifactId}</artifactId>
							<version>${project.version}</version>
							<type>${project.packaging}</type>
							<destFileName>${osgi.repackage.filename}</destFileName>
						</artifactItem>
					</artifactItems>
					<skip>${osgi.repackage.skip}</skip>
					<outputDirectory>${app.plugin.bundledir}</outputDirectory>
					<excludeTransitive>${osgi.bundle.excludeTransitive}</excludeTransitive>
					<overWriteSnapshots>true</overWriteSnapshots>
					<overWriteIfNewer>true</overWriteIfNewer>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
