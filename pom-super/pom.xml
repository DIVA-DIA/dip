<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ch.unifr.diva.dip</groupId>
	<artifactId>dip-pom-super</artifactId>
	<name>DIVA DIP Super POM</name>
	<version>1.0.0-SNAPSHOT</version>
	<description>
		The DIVA DIP Super POM is (indirectly) inherited by all DIP modules. It
		defines global properties and manages plugin and dependency versions
		used by the host application and/or by the OSGi framework.
		Special dependencies (e.g. to be embedded in some OSGi bundle) should
		not be managed here but in the bundle's own POM.
	</description>
	<packaging>pom</packaging>

	<url>http://diuf.unifr.ch/hisdoc2/</url>
	<organization>
		<name>University of Fribourg</name>
		<url>http://www.unifr.ch</url>
	</organization>

	<distributionManagement>
		<site>
			<id>${project.artifactId}-site</id>
			<url />
		</site>
	</distributionManagement>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.sourceEncoding>UTF-8</project.reporting.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>

		<!-- OSGi bundle directories -->
		<app.core.bundledir>../app/target/bundles-core</app.core.bundledir>
		<app.plugin.bundledir>../app/target/bundles</app.plugin.bundledir>

		<!-- unit tests -->
		<testing.surefire.skip>false</testing.surefire.skip>
		<testing.surefire.ignoreFailure>false</testing.surefire.ignoreFailure>
		<testing.surefire.file>${project.build.directory}/jacoco.exec</testing.surefire.file>
		<testing.surefire.argLine />

		<!-- integration tests -->
		<testing.failsafe.skip>true</testing.failsafe.skip>
		<testing.failsafe.ignoreFailure>false</testing.failsafe.ignoreFailure>
		<testing.failsafe.file>${project.build.directory}/jacoco-it.exec</testing.failsafe.file>
		<testing.failsafe.argLine />

		<!-- site/reporting -->
		<reporting.javadoc.skip>false</reporting.javadoc.skip>
		<reporting.surefire.skip>false</reporting.surefire.skip>
		<reporting.jacoco.skip>false</reporting.jacoco.skip>
		<reporting.checkstyle.skip>true</reporting.checkstyle.skip>
		<reporting.fingbugs.skip>false</reporting.fingbugs.skip>
	</properties>

	<profiles>
		<profile>
			<id>all-tests</id>
			<properties>
				<testing.surefire.skip>false</testing.surefire.skip>
				<testing.failsafe.skip>false</testing.failsafe.skip>
			</properties>
		</profile>

		<profile>
			<id>all-tests-and-reports</id>
			<properties>
				<testing.surefire.skip>false</testing.surefire.skip>
				<testing.failsafe.skip>false</testing.failsafe.skip>
				<reporting.javadoc.skip>false</reporting.javadoc.skip>
				<reporting.surefire.skip>false</reporting.surefire.skip>
				<reporting.jacoco.skip>false</reporting.jacoco.skip>
				<reporting.checkstyle.skip>false</reporting.checkstyle.skip>
				<reporting.fingbugs.skip>false</reporting.fingbugs.skip>
			</properties>
		</profile>

		<profile>
			<id>integration-test</id>
			<properties>
				<testing.surefire.skip>true</testing.surefire.skip>
				<testing.failsafe.skip>false</testing.failsafe.skip>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>ch.unifr.diva.dip</groupId>
				<artifactId>dip-api</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>ch.unifr.diva.dip</groupId>
				<artifactId>glyphs-materialdesignicons</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>ch.unifr.diva.dip</groupId>
				<artifactId>glyphs-fontawesome</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>ch.unifr.diva.dip</groupId>
				<artifactId>glyphs-icofont</artifactId>
				<version>1.0.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>6.0.0</version>
			</dependency>

			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>5.0.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.framework</artifactId>
				<version>5.6.2</version>
			</dependency>

			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.main</artifactId>
				<version>5.6.2</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.2.3</version>
			</dependency>

			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>1.2.3</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.12</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-core</artifactId>
				<version>1.19</version>
			</dependency>

			<dependency>
				<groupId>org.openjdk.jmh</groupId>
				<artifactId>jmh-generator-annprocess</artifactId>
				<version>1.19</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>22.0</version>
			</dependency>

			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.4</version>
			</dependency>

			<dependency>
				<groupId>net.objecthunter</groupId>
				<artifactId>exp4j</artifactId>
				<version>0.4.8</version>
			</dependency>

			<dependency>
				<groupId>uk.com.robust-it</groupId>
				<artifactId>cloning</artifactId>
				<version>1.9.3</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
								<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.1</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<showWarnings>true</showWarnings>
						<showDeprecation>true</showDeprecation>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.6</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.10</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.1</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<!--
						2.19 has a bug s.t. single test don't run (from netbeans)
						see: https://netbeans.org/bugzilla/show_bug.cgi?id=244404
						see: https://issues.apache.org/jira/browse/SUREFIRE-1028

						This is fixed in 2.20, but somehoe the output format got
						changed, and Netbeans 8.0.2 doesn't show the Test Results
						any longer... (should also be fixed in the nightly build,
						but hasn't shipped yet). So other than that, the surfire
						plugin could now be bumped to 2.20.
						see: https://netbeans.org/bugzilla/show_bug.cgi?id=257563
					-->
					<version>2.18.1</version>
					<configuration>
						<skipTests>${testing.surefire.skip}</skipTests>
						<testFailureIgnore>${testing.surefire.ignoreFailure}</testFailureIgnore>
						<argLine>-Dfile.encoding=UTF-8 @{testing.surefire.argLine}</argLine>
						<excludes>
							<exclude>**/*$*</exclude>
						</excludes>
						<includes>
							<include>**/Test*.java</include>
							<include>**/*Test.java</include>
						</includes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<skipSurefireReport>${reporting.surefire.skip}</skipSurefireReport>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.20</version>
					<executions>
						<execution>
							<id>integration-test</id>
							<phase>integration-test</phase>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<skipTests>${testing.failsafe.skip}</skipTests>
						<testFailureIgnore>${testing.failsafe.ignoreFailure}</testFailureIgnore>
						<argLine>-Dfile.encoding=UTF-8 @{testing.failsafe.argLine}</argLine>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.6</version>
					<configuration>
						<attach>true</attach>
						<reportPlugins>
							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-project-info-reports-plugin</artifactId>
							</plugin>

							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-javadoc-plugin</artifactId>
							</plugin>

							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-jxr-plugin</artifactId>
							</plugin>

							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-surefire-report-plugin</artifactId>
							</plugin>

							<plugin>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-checkstyle-plugin</artifactId>
							</plugin>

							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>findbugs-maven-plugin</artifactId>
							</plugin>

							<plugin>
								<groupId>org.jacoco</groupId>
								<artifactId>jacoco-maven-plugin</artifactId>
							</plugin>
						</reportPlugins>
					</configuration>
					<executions>
						<execution>
							<id>default-site</id>
							<phase>site</phase>
							<goals>
								<goal>site</goal>
							</goals>
						</execution>
						<execution>
							<id>attach-descriptor</id>
							<goals>
								<goal>attach-descriptor</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.9</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.4</version>
					<configuration>
						<skip>${reporting.javadoc.skip}</skip>
						<failOnError>false</failOnError>
						<additionalparam>-Xdoclint:none</additionalparam>
						<!-- UMLGraph needs a copy of graphviz installed! -->
						<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
						<docletArtifact>
							<groupId>org.umlgraph</groupId>
							<artifactId>umlgraph</artifactId>
							<version>5.6.6</version>
						</docletArtifact>
						<additionalparam>-Xdoclint:none -views -all</additionalparam>
						<useStandardDocletOptions>true</useStandardDocletOptions>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>site</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<aggregate>true</aggregate>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.17</version>
					<configuration>
						<skip>${reporting.checkstyle.skip}</skip>
						<includeTestSourceDirectory>true</includeTestSourceDirectory>
						<failOnError>false</failOnError>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>3.0.4</version>
					<configuration>
						<skip>${reporting.fingbugs.skip}</skip>
						<trace>false</trace>
						<effort>Max</effort>
						<threshold>Low</threshold>
						<xmlOutput>true</xmlOutput>
						<failOnError>false</failOnError>
					</configuration>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>findbugs</goal>
							</goals>
							<configuration>
								<skip>${reporting.fingbugs.skip}</skip>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.7.5.201505241946</version>
					<configuration>
						<skip>${reporting.jacoco.skip}</skip>
					</configuration>
					<executions>
						<execution>
							<id>pre-unit-test</id>
							<phase>process-test-classes</phase>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<destFile>${testing.surefire.file}</destFile>
								<propertyName>testing.surefire.argLine</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>pre-integration-test</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>prepare-agent-integration</goal>
							</goals>
							<configuration>
								<destFile>${testing.failsafe.file}</destFile>
								<propertyName>testing.failsafe.argLine</propertyName>
							</configuration>
						</execution>
						<execution>
							<id>post-unit-test</id>
							<phase>process-test-classes</phase>
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>${testing.surefire.file}</dataFile>
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
							</configuration>
						</execution>
						<execution>
							<id>post-integration-test</id>
							<phase>process-test-classes</phase>
							<goals>
								<goal>report-integration</goal>
							</goals>
							<configuration>
								<dataFile>${testing.failsafe.file}</dataFile>
								<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
